package com.bach.monitor.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class BachDatastageRowsLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public BachDatastageRowsLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andJobNameIsNull() {
            addCriterion("job_name is null");
            return (Criteria) this;
        }

        public Criteria andJobNameIsNotNull() {
            addCriterion("job_name is not null");
            return (Criteria) this;
        }

        public Criteria andJobNameEqualTo(String value) {
            addCriterion("job_name =", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameNotEqualTo(String value) {
            addCriterion("job_name <>", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameGreaterThan(String value) {
            addCriterion("job_name >", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameGreaterThanOrEqualTo(String value) {
            addCriterion("job_name >=", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameLessThan(String value) {
            addCriterion("job_name <", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameLessThanOrEqualTo(String value) {
            addCriterion("job_name <=", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameLike(String value) {
            addCriterion("job_name like", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameNotLike(String value) {
            addCriterion("job_name not like", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameIn(List<String> values) {
            addCriterion("job_name in", values, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameNotIn(List<String> values) {
            addCriterion("job_name not in", values, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameBetween(String value1, String value2) {
            addCriterion("job_name between", value1, value2, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameNotBetween(String value1, String value2) {
            addCriterion("job_name not between", value1, value2, "jobName");
            return (Criteria) this;
        }

        public Criteria andLogRownumIsNull() {
            addCriterion("log_rownum is null");
            return (Criteria) this;
        }

        public Criteria andLogRownumIsNotNull() {
            addCriterion("log_rownum is not null");
            return (Criteria) this;
        }

        public Criteria andLogRownumEqualTo(Integer value) {
            addCriterion("log_rownum =", value, "logRownum");
            return (Criteria) this;
        }

        public Criteria andLogRownumNotEqualTo(Integer value) {
            addCriterion("log_rownum <>", value, "logRownum");
            return (Criteria) this;
        }

        public Criteria andLogRownumGreaterThan(Integer value) {
            addCriterion("log_rownum >", value, "logRownum");
            return (Criteria) this;
        }

        public Criteria andLogRownumGreaterThanOrEqualTo(Integer value) {
            addCriterion("log_rownum >=", value, "logRownum");
            return (Criteria) this;
        }

        public Criteria andLogRownumLessThan(Integer value) {
            addCriterion("log_rownum <", value, "logRownum");
            return (Criteria) this;
        }

        public Criteria andLogRownumLessThanOrEqualTo(Integer value) {
            addCriterion("log_rownum <=", value, "logRownum");
            return (Criteria) this;
        }

        public Criteria andLogRownumIn(List<Integer> values) {
            addCriterion("log_rownum in", values, "logRownum");
            return (Criteria) this;
        }

        public Criteria andLogRownumNotIn(List<Integer> values) {
            addCriterion("log_rownum not in", values, "logRownum");
            return (Criteria) this;
        }

        public Criteria andLogRownumBetween(Integer value1, Integer value2) {
            addCriterion("log_rownum between", value1, value2, "logRownum");
            return (Criteria) this;
        }

        public Criteria andLogRownumNotBetween(Integer value1, Integer value2) {
            addCriterion("log_rownum not between", value1, value2, "logRownum");
            return (Criteria) this;
        }

        public Criteria andLogTimeIsNull() {
            addCriterion("log_time is null");
            return (Criteria) this;
        }

        public Criteria andLogTimeIsNotNull() {
            addCriterion("log_time is not null");
            return (Criteria) this;
        }

        public Criteria andLogTimeEqualTo(String value) {
            addCriterion("log_time =", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeNotEqualTo(String value) {
            addCriterion("log_time <>", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeGreaterThan(String value) {
            addCriterion("log_time >", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeGreaterThanOrEqualTo(String value) {
            addCriterion("log_time >=", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeLessThan(String value) {
            addCriterion("log_time <", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeLessThanOrEqualTo(String value) {
            addCriterion("log_time <=", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeLike(String value) {
            addCriterion("log_time like", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeNotLike(String value) {
            addCriterion("log_time not like", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeIn(List<String> values) {
            addCriterion("log_time in", values, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeNotIn(List<String> values) {
            addCriterion("log_time not in", values, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeBetween(String value1, String value2) {
            addCriterion("log_time between", value1, value2, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeNotBetween(String value1, String value2) {
            addCriterion("log_time not between", value1, value2, "logTime");
            return (Criteria) this;
        }

        public Criteria andBachNumIsNull() {
            addCriterion("bach_num is null");
            return (Criteria) this;
        }

        public Criteria andBachNumIsNotNull() {
            addCriterion("bach_num is not null");
            return (Criteria) this;
        }

        public Criteria andBachNumEqualTo(Integer value) {
            addCriterion("bach_num =", value, "bachNum");
            return (Criteria) this;
        }

        public Criteria andBachNumNotEqualTo(Integer value) {
            addCriterion("bach_num <>", value, "bachNum");
            return (Criteria) this;
        }

        public Criteria andBachNumGreaterThan(Integer value) {
            addCriterion("bach_num >", value, "bachNum");
            return (Criteria) this;
        }

        public Criteria andBachNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("bach_num >=", value, "bachNum");
            return (Criteria) this;
        }

        public Criteria andBachNumLessThan(Integer value) {
            addCriterion("bach_num <", value, "bachNum");
            return (Criteria) this;
        }

        public Criteria andBachNumLessThanOrEqualTo(Integer value) {
            addCriterion("bach_num <=", value, "bachNum");
            return (Criteria) this;
        }

        public Criteria andBachNumIn(List<Integer> values) {
            addCriterion("bach_num in", values, "bachNum");
            return (Criteria) this;
        }

        public Criteria andBachNumNotIn(List<Integer> values) {
            addCriterion("bach_num not in", values, "bachNum");
            return (Criteria) this;
        }

        public Criteria andBachNumBetween(Integer value1, Integer value2) {
            addCriterion("bach_num between", value1, value2, "bachNum");
            return (Criteria) this;
        }

        public Criteria andBachNumNotBetween(Integer value1, Integer value2) {
            addCriterion("bach_num not between", value1, value2, "bachNum");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeIsNull() {
            addCriterion("upsert_type is null");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeIsNotNull() {
            addCriterion("upsert_type is not null");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeEqualTo(String value) {
            addCriterion("upsert_type =", value, "upsertType");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeNotEqualTo(String value) {
            addCriterion("upsert_type <>", value, "upsertType");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeGreaterThan(String value) {
            addCriterion("upsert_type >", value, "upsertType");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeGreaterThanOrEqualTo(String value) {
            addCriterion("upsert_type >=", value, "upsertType");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeLessThan(String value) {
            addCriterion("upsert_type <", value, "upsertType");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeLessThanOrEqualTo(String value) {
            addCriterion("upsert_type <=", value, "upsertType");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeLike(String value) {
            addCriterion("upsert_type like", value, "upsertType");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeNotLike(String value) {
            addCriterion("upsert_type not like", value, "upsertType");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeIn(List<String> values) {
            addCriterion("upsert_type in", values, "upsertType");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeNotIn(List<String> values) {
            addCriterion("upsert_type not in", values, "upsertType");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeBetween(String value1, String value2) {
            addCriterion("upsert_type between", value1, value2, "upsertType");
            return (Criteria) this;
        }

        public Criteria andUpsertTypeNotBetween(String value1, String value2) {
            addCriterion("upsert_type not between", value1, value2, "upsertType");
            return (Criteria) this;
        }

        public Criteria andRowNumIsNull() {
            addCriterion("row_num is null");
            return (Criteria) this;
        }

        public Criteria andRowNumIsNotNull() {
            addCriterion("row_num is not null");
            return (Criteria) this;
        }

        public Criteria andRowNumEqualTo(Integer value) {
            addCriterion("row_num =", value, "rowNum");
            return (Criteria) this;
        }

        public Criteria andRowNumNotEqualTo(Integer value) {
            addCriterion("row_num <>", value, "rowNum");
            return (Criteria) this;
        }

        public Criteria andRowNumGreaterThan(Integer value) {
            addCriterion("row_num >", value, "rowNum");
            return (Criteria) this;
        }

        public Criteria andRowNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("row_num >=", value, "rowNum");
            return (Criteria) this;
        }

        public Criteria andRowNumLessThan(Integer value) {
            addCriterion("row_num <", value, "rowNum");
            return (Criteria) this;
        }

        public Criteria andRowNumLessThanOrEqualTo(Integer value) {
            addCriterion("row_num <=", value, "rowNum");
            return (Criteria) this;
        }

        public Criteria andRowNumIn(List<Integer> values) {
            addCriterion("row_num in", values, "rowNum");
            return (Criteria) this;
        }

        public Criteria andRowNumNotIn(List<Integer> values) {
            addCriterion("row_num not in", values, "rowNum");
            return (Criteria) this;
        }

        public Criteria andRowNumBetween(Integer value1, Integer value2) {
            addCriterion("row_num between", value1, value2, "rowNum");
            return (Criteria) this;
        }

        public Criteria andRowNumNotBetween(Integer value1, Integer value2) {
            addCriterion("row_num not between", value1, value2, "rowNum");
            return (Criteria) this;
        }

        public Criteria andInsertTimeIsNull() {
            addCriterion("insert_time is null");
            return (Criteria) this;
        }

        public Criteria andInsertTimeIsNotNull() {
            addCriterion("insert_time is not null");
            return (Criteria) this;
        }

        public Criteria andInsertTimeEqualTo(Date value) {
            addCriterion("insert_time =", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeNotEqualTo(Date value) {
            addCriterion("insert_time <>", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeGreaterThan(Date value) {
            addCriterion("insert_time >", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("insert_time >=", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeLessThan(Date value) {
            addCriterion("insert_time <", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeLessThanOrEqualTo(Date value) {
            addCriterion("insert_time <=", value, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeIn(List<Date> values) {
            addCriterion("insert_time in", values, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeNotIn(List<Date> values) {
            addCriterion("insert_time not in", values, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeBetween(Date value1, Date value2) {
            addCriterion("insert_time between", value1, value2, "insertTime");
            return (Criteria) this;
        }

        public Criteria andInsertTimeNotBetween(Date value1, Date value2) {
            addCriterion("insert_time not between", value1, value2, "insertTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated do_not_delete_during_merge Thu Aug 01 12:36:06 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bach_datastage_rows_log
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}