package com.bach.monitor.domain;

import java.util.ArrayList;
import java.util.List;

public class BachOggSourceTableInfo20181113Example {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public BachOggSourceTableInfo20181113Example() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIpIsNull() {
            addCriterion("ip is null");
            return (Criteria) this;
        }

        public Criteria andIpIsNotNull() {
            addCriterion("ip is not null");
            return (Criteria) this;
        }

        public Criteria andIpEqualTo(String value) {
            addCriterion("ip =", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotEqualTo(String value) {
            addCriterion("ip <>", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpGreaterThan(String value) {
            addCriterion("ip >", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpGreaterThanOrEqualTo(String value) {
            addCriterion("ip >=", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLessThan(String value) {
            addCriterion("ip <", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLessThanOrEqualTo(String value) {
            addCriterion("ip <=", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLike(String value) {
            addCriterion("ip like", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotLike(String value) {
            addCriterion("ip not like", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpIn(List<String> values) {
            addCriterion("ip in", values, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotIn(List<String> values) {
            addCriterion("ip not in", values, "ip");
            return (Criteria) this;
        }

        public Criteria andIpBetween(String value1, String value2) {
            addCriterion("ip between", value1, value2, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotBetween(String value1, String value2) {
            addCriterion("ip not between", value1, value2, "ip");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerIsNull() {
            addCriterion("src_table_owner is null");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerIsNotNull() {
            addCriterion("src_table_owner is not null");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerEqualTo(String value) {
            addCriterion("src_table_owner =", value, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerNotEqualTo(String value) {
            addCriterion("src_table_owner <>", value, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerGreaterThan(String value) {
            addCriterion("src_table_owner >", value, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerGreaterThanOrEqualTo(String value) {
            addCriterion("src_table_owner >=", value, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerLessThan(String value) {
            addCriterion("src_table_owner <", value, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerLessThanOrEqualTo(String value) {
            addCriterion("src_table_owner <=", value, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerLike(String value) {
            addCriterion("src_table_owner like", value, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerNotLike(String value) {
            addCriterion("src_table_owner not like", value, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerIn(List<String> values) {
            addCriterion("src_table_owner in", values, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerNotIn(List<String> values) {
            addCriterion("src_table_owner not in", values, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerBetween(String value1, String value2) {
            addCriterion("src_table_owner between", value1, value2, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableOwnerNotBetween(String value1, String value2) {
            addCriterion("src_table_owner not between", value1, value2, "srcTableOwner");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameIsNull() {
            addCriterion("src_table_name is null");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameIsNotNull() {
            addCriterion("src_table_name is not null");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameEqualTo(String value) {
            addCriterion("src_table_name =", value, "srcTableName");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameNotEqualTo(String value) {
            addCriterion("src_table_name <>", value, "srcTableName");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameGreaterThan(String value) {
            addCriterion("src_table_name >", value, "srcTableName");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameGreaterThanOrEqualTo(String value) {
            addCriterion("src_table_name >=", value, "srcTableName");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameLessThan(String value) {
            addCriterion("src_table_name <", value, "srcTableName");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameLessThanOrEqualTo(String value) {
            addCriterion("src_table_name <=", value, "srcTableName");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameLike(String value) {
            addCriterion("src_table_name like", value, "srcTableName");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameNotLike(String value) {
            addCriterion("src_table_name not like", value, "srcTableName");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameIn(List<String> values) {
            addCriterion("src_table_name in", values, "srcTableName");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameNotIn(List<String> values) {
            addCriterion("src_table_name not in", values, "srcTableName");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameBetween(String value1, String value2) {
            addCriterion("src_table_name between", value1, value2, "srcTableName");
            return (Criteria) this;
        }

        public Criteria andSrcTableNameNotBetween(String value1, String value2) {
            addCriterion("src_table_name not between", value1, value2, "srcTableName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated do_not_delete_during_merge Thu Aug 01 12:36:06 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bach_ogg_source_table_info_20181113
     *
     * @mbg.generated Thu Aug 01 12:36:06 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}