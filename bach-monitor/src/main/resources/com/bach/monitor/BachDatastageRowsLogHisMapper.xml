<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bach.monitor.mapper.BachDatastageRowsLogHisMapper">
  <resultMap id="BaseResultMap" type="com.bach.monitor.domain.BachDatastageRowsLogHis">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="log_rownum" jdbcType="INTEGER" property="logRownum" />
    <result column="log_time" jdbcType="VARCHAR" property="logTime" />
    <result column="bach_num" jdbcType="INTEGER" property="bachNum" />
    <result column="upsert_type" jdbcType="VARCHAR" property="upsertType" />
    <result column="row_num" jdbcType="INTEGER" property="rowNum" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    job_name, log_rownum, log_time, bach_num, upsert_type, row_num, insert_time
  </sql>
  <select id="selectByExample" parameterType="com.bach.monitor.domain.BachDatastageRowsLogHisExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bach_datastage_rows_log_his
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.bach.monitor.domain.BachDatastageRowsLogHisExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    delete from bach_datastage_rows_log_his
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bach.monitor.domain.BachDatastageRowsLogHis">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    insert into bach_datastage_rows_log_his (job_name, log_rownum, log_time, 
      bach_num, upsert_type, row_num, 
      insert_time)
    values (#{jobName,jdbcType=VARCHAR}, #{logRownum,jdbcType=INTEGER}, #{logTime,jdbcType=VARCHAR}, 
      #{bachNum,jdbcType=INTEGER}, #{upsertType,jdbcType=VARCHAR}, #{rowNum,jdbcType=INTEGER}, 
      #{insertTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bach.monitor.domain.BachDatastageRowsLogHis">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    insert into bach_datastage_rows_log_his
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobName != null">
        job_name,
      </if>
      <if test="logRownum != null">
        log_rownum,
      </if>
      <if test="logTime != null">
        log_time,
      </if>
      <if test="bachNum != null">
        bach_num,
      </if>
      <if test="upsertType != null">
        upsert_type,
      </if>
      <if test="rowNum != null">
        row_num,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="logRownum != null">
        #{logRownum,jdbcType=INTEGER},
      </if>
      <if test="logTime != null">
        #{logTime,jdbcType=VARCHAR},
      </if>
      <if test="bachNum != null">
        #{bachNum,jdbcType=INTEGER},
      </if>
      <if test="upsertType != null">
        #{upsertType,jdbcType=VARCHAR},
      </if>
      <if test="rowNum != null">
        #{rowNum,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bach.monitor.domain.BachDatastageRowsLogHisExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    select count(*) from bach_datastage_rows_log_his
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    update bach_datastage_rows_log_his
    <set>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.logRownum != null">
        log_rownum = #{record.logRownum,jdbcType=INTEGER},
      </if>
      <if test="record.logTime != null">
        log_time = #{record.logTime,jdbcType=VARCHAR},
      </if>
      <if test="record.bachNum != null">
        bach_num = #{record.bachNum,jdbcType=INTEGER},
      </if>
      <if test="record.upsertType != null">
        upsert_type = #{record.upsertType,jdbcType=VARCHAR},
      </if>
      <if test="record.rowNum != null">
        row_num = #{record.rowNum,jdbcType=INTEGER},
      </if>
      <if test="record.insertTime != null">
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    update bach_datastage_rows_log_his
    set job_name = #{record.jobName,jdbcType=VARCHAR},
      log_rownum = #{record.logRownum,jdbcType=INTEGER},
      log_time = #{record.logTime,jdbcType=VARCHAR},
      bach_num = #{record.bachNum,jdbcType=INTEGER},
      upsert_type = #{record.upsertType,jdbcType=VARCHAR},
      row_num = #{record.rowNum,jdbcType=INTEGER},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>