<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bach.monitor.mapper.BachDatastageJobCustomInputMapper">
  <resultMap id="BaseResultMap" type="com.bach.monitor.domain.BachDatastageJobCustomInput">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    <result column="job_identifier" jdbcType="VARCHAR" property="jobIdentifier" />
    <result column="modified_time" jdbcType="VARCHAR" property="modifiedTime" />
    <result column="record_identifier" jdbcType="VARCHAR" property="recordIdentifier" />
    <result column="property_name" jdbcType="VARCHAR" property="propertyName" />
    <result column="property_partner" jdbcType="VARCHAR" property="propertyPartner" />
    <result column="property_link_type" jdbcType="VARCHAR" property="propertyLinkType" />
    <result column="collection_dboptionssel" jdbcType="VARCHAR" property="collectionDboptionssel" />
    <result column="collection_dboptions" jdbcType="VARCHAR" property="collectionDboptions" />
    <result column="collection_tablename" jdbcType="VARCHAR" property="collectionTablename" />
    <result column="collection_server" jdbcType="VARCHAR" property="collectionServer" />
    <result column="collect_server_prefix" jdbcType="VARCHAR" property="collectServerPrefix" />
    <result column="collect_server_suffix" jdbcType="VARCHAR" property="collectServerSuffix" />
    <result column="dboptions_user_prefix" jdbcType="VARCHAR" property="dboptionsUserPrefix" />
    <result column="dboptions_user_suffix" jdbcType="VARCHAR" property="dboptionsUserSuffix" />
    <result column="dboptions_password_prefix" jdbcType="VARCHAR" property="dboptionsPasswordPrefix" />
    <result column="dboptions_password_suffix" jdbcType="VARCHAR" property="dboptionsPasswordSuffix" />
    <result column="insert_table_name" jdbcType="VARCHAR" property="insertTableName" />
    <result column="update_table_name" jdbcType="VARCHAR" property="updateTableName" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="collection_tablename_cut" jdbcType="VARCHAR" property="collectionTablenameCut" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bach.monitor.domain.BachDatastageJobCustomInputWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    <result column="collection_insert" jdbcType="LONGVARCHAR" property="collectionInsert" />
    <result column="collection_update" jdbcType="LONGVARCHAR" property="collectionUpdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    job_identifier, modified_time, record_identifier, property_name, property_partner, 
    property_link_type, collection_dboptionssel, collection_dboptions, collection_tablename, 
    collection_server, collect_server_prefix, collect_server_suffix, dboptions_user_prefix, 
    dboptions_user_suffix, dboptions_password_prefix, dboptions_password_suffix, insert_table_name, 
    update_table_name, update_time, collection_tablename_cut
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    collection_insert, collection_update
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bach.monitor.domain.BachDatastageJobCustomInputExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bach_datastage_job_custom_input
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bach.monitor.domain.BachDatastageJobCustomInputExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bach_datastage_job_custom_input
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.bach.monitor.domain.BachDatastageJobCustomInputExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    delete from bach_datastage_job_custom_input
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bach.monitor.domain.BachDatastageJobCustomInputWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    insert into bach_datastage_job_custom_input (job_identifier, modified_time, record_identifier, 
      property_name, property_partner, property_link_type, 
      collection_dboptionssel, collection_dboptions, 
      collection_tablename, collection_server, 
      collect_server_prefix, collect_server_suffix, 
      dboptions_user_prefix, dboptions_user_suffix, 
      dboptions_password_prefix, dboptions_password_suffix, 
      insert_table_name, update_table_name, update_time, 
      collection_tablename_cut, collection_insert, 
      collection_update)
    values (#{jobIdentifier,jdbcType=VARCHAR}, #{modifiedTime,jdbcType=VARCHAR}, #{recordIdentifier,jdbcType=VARCHAR}, 
      #{propertyName,jdbcType=VARCHAR}, #{propertyPartner,jdbcType=VARCHAR}, #{propertyLinkType,jdbcType=VARCHAR}, 
      #{collectionDboptionssel,jdbcType=VARCHAR}, #{collectionDboptions,jdbcType=VARCHAR}, 
      #{collectionTablename,jdbcType=VARCHAR}, #{collectionServer,jdbcType=VARCHAR}, 
      #{collectServerPrefix,jdbcType=VARCHAR}, #{collectServerSuffix,jdbcType=VARCHAR}, 
      #{dboptionsUserPrefix,jdbcType=VARCHAR}, #{dboptionsUserSuffix,jdbcType=VARCHAR}, 
      #{dboptionsPasswordPrefix,jdbcType=VARCHAR}, #{dboptionsPasswordSuffix,jdbcType=VARCHAR}, 
      #{insertTableName,jdbcType=VARCHAR}, #{updateTableName,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, 
      #{collectionTablenameCut,jdbcType=VARCHAR}, #{collectionInsert,jdbcType=LONGVARCHAR}, 
      #{collectionUpdate,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bach.monitor.domain.BachDatastageJobCustomInputWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    insert into bach_datastage_job_custom_input
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobIdentifier != null">
        job_identifier,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
      <if test="recordIdentifier != null">
        record_identifier,
      </if>
      <if test="propertyName != null">
        property_name,
      </if>
      <if test="propertyPartner != null">
        property_partner,
      </if>
      <if test="propertyLinkType != null">
        property_link_type,
      </if>
      <if test="collectionDboptionssel != null">
        collection_dboptionssel,
      </if>
      <if test="collectionDboptions != null">
        collection_dboptions,
      </if>
      <if test="collectionTablename != null">
        collection_tablename,
      </if>
      <if test="collectionServer != null">
        collection_server,
      </if>
      <if test="collectServerPrefix != null">
        collect_server_prefix,
      </if>
      <if test="collectServerSuffix != null">
        collect_server_suffix,
      </if>
      <if test="dboptionsUserPrefix != null">
        dboptions_user_prefix,
      </if>
      <if test="dboptionsUserSuffix != null">
        dboptions_user_suffix,
      </if>
      <if test="dboptionsPasswordPrefix != null">
        dboptions_password_prefix,
      </if>
      <if test="dboptionsPasswordSuffix != null">
        dboptions_password_suffix,
      </if>
      <if test="insertTableName != null">
        insert_table_name,
      </if>
      <if test="updateTableName != null">
        update_table_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="collectionTablenameCut != null">
        collection_tablename_cut,
      </if>
      <if test="collectionInsert != null">
        collection_insert,
      </if>
      <if test="collectionUpdate != null">
        collection_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobIdentifier != null">
        #{jobIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=VARCHAR},
      </if>
      <if test="recordIdentifier != null">
        #{recordIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="propertyName != null">
        #{propertyName,jdbcType=VARCHAR},
      </if>
      <if test="propertyPartner != null">
        #{propertyPartner,jdbcType=VARCHAR},
      </if>
      <if test="propertyLinkType != null">
        #{propertyLinkType,jdbcType=VARCHAR},
      </if>
      <if test="collectionDboptionssel != null">
        #{collectionDboptionssel,jdbcType=VARCHAR},
      </if>
      <if test="collectionDboptions != null">
        #{collectionDboptions,jdbcType=VARCHAR},
      </if>
      <if test="collectionTablename != null">
        #{collectionTablename,jdbcType=VARCHAR},
      </if>
      <if test="collectionServer != null">
        #{collectionServer,jdbcType=VARCHAR},
      </if>
      <if test="collectServerPrefix != null">
        #{collectServerPrefix,jdbcType=VARCHAR},
      </if>
      <if test="collectServerSuffix != null">
        #{collectServerSuffix,jdbcType=VARCHAR},
      </if>
      <if test="dboptionsUserPrefix != null">
        #{dboptionsUserPrefix,jdbcType=VARCHAR},
      </if>
      <if test="dboptionsUserSuffix != null">
        #{dboptionsUserSuffix,jdbcType=VARCHAR},
      </if>
      <if test="dboptionsPasswordPrefix != null">
        #{dboptionsPasswordPrefix,jdbcType=VARCHAR},
      </if>
      <if test="dboptionsPasswordSuffix != null">
        #{dboptionsPasswordSuffix,jdbcType=VARCHAR},
      </if>
      <if test="insertTableName != null">
        #{insertTableName,jdbcType=VARCHAR},
      </if>
      <if test="updateTableName != null">
        #{updateTableName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="collectionTablenameCut != null">
        #{collectionTablenameCut,jdbcType=VARCHAR},
      </if>
      <if test="collectionInsert != null">
        #{collectionInsert,jdbcType=LONGVARCHAR},
      </if>
      <if test="collectionUpdate != null">
        #{collectionUpdate,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bach.monitor.domain.BachDatastageJobCustomInputExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    select count(*) from bach_datastage_job_custom_input
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    update bach_datastage_job_custom_input
    <set>
      <if test="record.jobIdentifier != null">
        job_identifier = #{record.jobIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="record.modifiedTime != null">
        modified_time = #{record.modifiedTime,jdbcType=VARCHAR},
      </if>
      <if test="record.recordIdentifier != null">
        record_identifier = #{record.recordIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="record.propertyName != null">
        property_name = #{record.propertyName,jdbcType=VARCHAR},
      </if>
      <if test="record.propertyPartner != null">
        property_partner = #{record.propertyPartner,jdbcType=VARCHAR},
      </if>
      <if test="record.propertyLinkType != null">
        property_link_type = #{record.propertyLinkType,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionDboptionssel != null">
        collection_dboptionssel = #{record.collectionDboptionssel,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionDboptions != null">
        collection_dboptions = #{record.collectionDboptions,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionTablename != null">
        collection_tablename = #{record.collectionTablename,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionServer != null">
        collection_server = #{record.collectionServer,jdbcType=VARCHAR},
      </if>
      <if test="record.collectServerPrefix != null">
        collect_server_prefix = #{record.collectServerPrefix,jdbcType=VARCHAR},
      </if>
      <if test="record.collectServerSuffix != null">
        collect_server_suffix = #{record.collectServerSuffix,jdbcType=VARCHAR},
      </if>
      <if test="record.dboptionsUserPrefix != null">
        dboptions_user_prefix = #{record.dboptionsUserPrefix,jdbcType=VARCHAR},
      </if>
      <if test="record.dboptionsUserSuffix != null">
        dboptions_user_suffix = #{record.dboptionsUserSuffix,jdbcType=VARCHAR},
      </if>
      <if test="record.dboptionsPasswordPrefix != null">
        dboptions_password_prefix = #{record.dboptionsPasswordPrefix,jdbcType=VARCHAR},
      </if>
      <if test="record.dboptionsPasswordSuffix != null">
        dboptions_password_suffix = #{record.dboptionsPasswordSuffix,jdbcType=VARCHAR},
      </if>
      <if test="record.insertTableName != null">
        insert_table_name = #{record.insertTableName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTableName != null">
        update_table_name = #{record.updateTableName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionTablenameCut != null">
        collection_tablename_cut = #{record.collectionTablenameCut,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionInsert != null">
        collection_insert = #{record.collectionInsert,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.collectionUpdate != null">
        collection_update = #{record.collectionUpdate,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    update bach_datastage_job_custom_input
    set job_identifier = #{record.jobIdentifier,jdbcType=VARCHAR},
      modified_time = #{record.modifiedTime,jdbcType=VARCHAR},
      record_identifier = #{record.recordIdentifier,jdbcType=VARCHAR},
      property_name = #{record.propertyName,jdbcType=VARCHAR},
      property_partner = #{record.propertyPartner,jdbcType=VARCHAR},
      property_link_type = #{record.propertyLinkType,jdbcType=VARCHAR},
      collection_dboptionssel = #{record.collectionDboptionssel,jdbcType=VARCHAR},
      collection_dboptions = #{record.collectionDboptions,jdbcType=VARCHAR},
      collection_tablename = #{record.collectionTablename,jdbcType=VARCHAR},
      collection_server = #{record.collectionServer,jdbcType=VARCHAR},
      collect_server_prefix = #{record.collectServerPrefix,jdbcType=VARCHAR},
      collect_server_suffix = #{record.collectServerSuffix,jdbcType=VARCHAR},
      dboptions_user_prefix = #{record.dboptionsUserPrefix,jdbcType=VARCHAR},
      dboptions_user_suffix = #{record.dboptionsUserSuffix,jdbcType=VARCHAR},
      dboptions_password_prefix = #{record.dboptionsPasswordPrefix,jdbcType=VARCHAR},
      dboptions_password_suffix = #{record.dboptionsPasswordSuffix,jdbcType=VARCHAR},
      insert_table_name = #{record.insertTableName,jdbcType=VARCHAR},
      update_table_name = #{record.updateTableName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      collection_tablename_cut = #{record.collectionTablenameCut,jdbcType=VARCHAR},
      collection_insert = #{record.collectionInsert,jdbcType=LONGVARCHAR},
      collection_update = #{record.collectionUpdate,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 01 12:36:06 CST 2019.
    -->
    update bach_datastage_job_custom_input
    set job_identifier = #{record.jobIdentifier,jdbcType=VARCHAR},
      modified_time = #{record.modifiedTime,jdbcType=VARCHAR},
      record_identifier = #{record.recordIdentifier,jdbcType=VARCHAR},
      property_name = #{record.propertyName,jdbcType=VARCHAR},
      property_partner = #{record.propertyPartner,jdbcType=VARCHAR},
      property_link_type = #{record.propertyLinkType,jdbcType=VARCHAR},
      collection_dboptionssel = #{record.collectionDboptionssel,jdbcType=VARCHAR},
      collection_dboptions = #{record.collectionDboptions,jdbcType=VARCHAR},
      collection_tablename = #{record.collectionTablename,jdbcType=VARCHAR},
      collection_server = #{record.collectionServer,jdbcType=VARCHAR},
      collect_server_prefix = #{record.collectServerPrefix,jdbcType=VARCHAR},
      collect_server_suffix = #{record.collectServerSuffix,jdbcType=VARCHAR},
      dboptions_user_prefix = #{record.dboptionsUserPrefix,jdbcType=VARCHAR},
      dboptions_user_suffix = #{record.dboptionsUserSuffix,jdbcType=VARCHAR},
      dboptions_password_prefix = #{record.dboptionsPasswordPrefix,jdbcType=VARCHAR},
      dboptions_password_suffix = #{record.dboptionsPasswordSuffix,jdbcType=VARCHAR},
      insert_table_name = #{record.insertTableName,jdbcType=VARCHAR},
      update_table_name = #{record.updateTableName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      collection_tablename_cut = #{record.collectionTablenameCut,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>